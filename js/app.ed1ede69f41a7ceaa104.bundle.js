(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),{lightningChart:n,Themes:i,PalettedFill:o,LUT:l,regularColorSteps:r,PointShape:d,LegendPosition:u}=s;fetch(`${new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname}examples/assets/0918/precalc-surface.json`).then(e=>e.json()).then(e=>{const{keyIntensity:t,startX:a,stepX:s,startZ:d,stepZ:c,valueRanges:h,surfaceResolution:m,surfaceDataY:p,surfaceDataIntensity:g,dataPoints:f}=e,w=n({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Chart3D({legend:{position:u.RightCenter},theme:i[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("3D surface chart visualized from scatter data set");w.getDefaultAxisX().setTitle("KPI X"),w.getDefaultAxisY().setTitle("KPI Y"),w.getDefaultAxisZ().setTitle("KPI Z"),w.addPointSeries().setName("Raw samples").add(f).setPointStyle(e=>e.setSize(5));const P=w.addSurfaceGridSeries({dataOrder:"columns",columns:m,rows:m}).setStart({x:a,z:d}).setStep({x:s,z:c}).setName("Surface").invalidateHeightMap(p);t&&P.invalidateIntensityValues(g).setFillStyle(new o({lookUpProperty:"value",lut:new l({interpolate:!0,steps:r(h[t].min,h[t].max,w.getTheme().examples.badGoodColorPalette),units:"KPI 4"})}))})}},e=>{e.O(0,[502],()=>e(e.s=44)),e.O()}]);